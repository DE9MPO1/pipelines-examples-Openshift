# 
# USAGE:
#   oc create -f http://bit.ly/pipelines-demo
#   tkn pipeline start petclinic-s2i-pipeline -n pipelines-demo
#

---
apiVersion: v1
kind: Namespace
metadata:
  name: pipelines-demo
---
# bucketrepo maven repository
apiVersion: v1
kind: Secret
metadata:
  name: bucketrepo-config
  namespace: pipelines-demo
  annotations:
    config/checksum: 533347b915964ea57056e799479ab96181274ee7cde598452affee274449ad22
type: Opaque
stringData:
  config.yaml: |
    http:
        addr: ":8080"
    
    storage:
        enabled: false
        bucket_url: "gs://bucketrepo"
    
    cache:
        base_dir: "/tmp/bucketrepo"
    
    repositories:
        - url: "https://repo1.maven.org/maven2"
        - url: "http://uk.maven.org/maven2/"
---
apiVersion: v1
kind: Service
metadata:
  name: mavenrepo
  namespace: pipelines-demo
  labels:
    chart: "bucketrepo-0.1.19"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: bucketrepo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mavenrepo
  namespace: pipelines-demo
  labels:
    app: maven
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: mavenrepo
    app.kubernetes.io/name: mavenrepo
    app.kubernetes.io/part-of: mavenrepo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bucketrepo
  template:
    metadata:
      labels:
        app: bucketrepo
    spec:
      containers:
      - name: bucketrepo
        image: "gcr.io/jenkinsxio/bucketrepo:0.1.19"
        imagePullPolicy: IfNotPresent
        command: ["/bucketrepo"]
        args:
        - "-config-path=/config"
        - "-log-level=info"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 80m
              memory: 128Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: config
        secret:
          secretName: bucketrepo-config
---
# petclinic app
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-petclinic
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: spring-petclinic
    app.kubernetes.io/name: spring-petclinic
    app.kubernetes.io/part-of: spring-petclinic
    app.openshift.io/runtime: java
  name: spring-petclinic
  namespace: pipelines-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-petclinic
  template:
    metadata:
      labels:
        app: spring-petclinic
    spec:
      containers:
      - name: spring-petclinic
        imagePullPolicy: Always
        image: quay.io/siamaksade/spring-petclinic:latest
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-petclinic
  name: spring-petclinic
  namespace: pipelines-demo
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  - name: 8778-tcp
    port: 8778
    protocol: TCP
    targetPort: 8778
  selector:
    app: spring-petclinic
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: spring-petclinic
  name: spring-petclinic
  namespace: pipelines-demo
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: spring-petclinic
    weight: 100
---
apiVersion: v1
kind: Secret
metadata:
  name: quay-push-secret
  namespace: pipelines-demo
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJjMmxoYldGcmMyRmtaU3QwWld0MGIyNDZORkZOU1V4SU9WZFdTRFZXV1RnMlRWSTNUazFGT1RBM1EwdEdVVXRPUlU1Uk1VUllTMUZSU0ZwWFdrdFlOelk1V2tNNFMwWklUMWN5UzBsVVR6UkdPUT09IiwKICAgICAgImVtYWlsIjogIiIKICAgIH0KICB9Cn0=
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline
  namespace: pipelines-demo
imagePullSecrets:
- name: quay-push-secret
secrets:
- name: quay-push-secret
---
# tasks
apiVersion: v1
kind: ConfigMap
metadata:
  name: mvn-settings
  namespace: pipelines-demo
data:
  .settings.xml: |
    <settings>
      <mirrors>
        <mirror>
          <id>bucketrepo</id>
          <name>bucketrepo- mirror</name>
          <url>http://mavenrepo:8080/bucketrepo/</url>
          <mirrorOf>*</mirrorOf>
        </mirror>
      </mirrors>
    </settings>
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: mvn
  namespace: pipelines-demo
spec:
  inputs:
    params:
      - name: GOALS
        description: The Maven goals to run
        type: array
        default:
        - "package"
    resources:
    - name: source
      targetPath: /
      type: git
  steps:
  - name: mvn-settings
    image: maven:3.6.2-slim
    workingdir: /.m2
    command:
      - '/bin/sh'
      - '-c'
    args:
      - |-
        cat > /.m2/settings.xml <<EOF
        <settings>
          <mirrors>
            <mirror>
              <id>bucketrepo</id>
              <name>bucketrepo- mirror</name>
              <url>http://mavenrepo:8080/bucketrepo/</url>
              <mirrorOf>*</mirrorOf>
            </mirror>
          </mirrors>
        </settings>
        EOF
    volumeMounts:
      - name: m2-repository
        mountPath: /.m2
  - name: mvn-goals
    image: maven:3.6.2-slim
    command:
    - /usr/bin/mvn
    args:
      - "$(inputs.params.GOALS)"
    volumeMounts:
      - name: m2-repository
        mountPath: /.m2
  volumes:
    - name: m2-repository
      emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: oc-redeploy
  namespace: pipelines-demo
spec:
  inputs:
    params:
      - name: DEPLOYMENT
        type: string 
  steps:
    - name: scale-down
      image: quay.io/openshift/origin-cli:latest
      command:
        - '/bin/sh'
        - '-c'
      args:
      args:
        - |-
          oc scale deployment/$(inputs.params.DEPLOYMENT) --replicas=0
          oc rollout status deployment/$(inputs.params.DEPLOYMENT)
    - name: scale-up
      image: quay.io/openshift/origin-cli:latest
      command:
        - '/bin/sh'
        - '-c'
      args:
      args:
        - |-
          oc scale deployment/$(inputs.params.DEPLOYMENT) --replicas=1
          oc rollout status deployment/$(inputs.params.DEPLOYMENT)
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: petclinic-image
  namespace: pipelines-demo
spec:
  type: image
  params:
  - name: url
    value: quay.io/siamaksade/spring-petclinic
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: petclinic-git
  namespace: pipelines-demo
spec:
  type: git
  params:
  - name: url
    value: https://github.com/spring-projects/spring-petclinic
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: petclinic-s2i-pipeline
  namespace: pipelines-demo
spec:
  resources:
  - name: app-git
    type: git
  - name: app-image
    type: image
  tasks:
  - name: unit-tests
    taskRef:
      name: mvn
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: 
        - package
  - name: build-image
    taskRef:
      name: s2i-java-8
      kind: ClusterTask
    runAfter:
      - unit-tests
    params:
      - name: TLSVERIFY
        value: "false"
      - name: MAVEN_MIRROR_URL
        value: http://mavenrepo:8080/bucketrepo/
    resources:
      inputs:
      - name: source
        resource: app-git
      outputs:
      - name: image
        resource: app-image
  - name: slow-unit-tests
    taskRef:
      name: mvn
    runAfter:
      - unit-tests
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value:
        - verify
  - name: deploy
    taskRef:
      name: oc-redeploy
    runAfter:
      - build-image
      - slow-unit-tests
    params:
    - name: DEPLOYMENT
      value: spring-petclinic